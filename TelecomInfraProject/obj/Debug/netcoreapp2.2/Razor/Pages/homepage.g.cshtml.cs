#pragma checksum "D:\New TFS\Telecom Infra Project\TelecomInfraProject\TelecomInfraProject\Pages\homepage.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "774f02e4ef65f572851bfc2ecfb9ff810c582273"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Pages_homepage), @"mvc.1.0.razor-page", @"/Pages/homepage.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.RazorPages.Infrastructure.RazorPageAttribute(@"/Pages/homepage.cshtml", typeof(AspNetCore.Pages_homepage), null)]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"774f02e4ef65f572851bfc2ecfb9ff810c582273", @"/Pages/homepage.cshtml")]
    public class Pages_homepage : global::Microsoft.AspNetCore.Mvc.RazorPages.Page
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("icon"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/Assets/img/telecom-favicon.ico"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("type", new global::Microsoft.AspNetCore.Html.HtmlString("image/gif"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("sizes", new global::Microsoft.AspNetCore.Html.HtmlString("16x16"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/Style.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/Network Graph/FileSaver.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/Network Graph/jsstore.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/Network Graph/jsstore.worker.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/vis-network.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_10 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/alea.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_11 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/exampleUtil.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_12 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/LocalDB/taffy.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_13 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/LocalDB/taffy-min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_14 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/jquery-2.0.3.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_15 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/Network Graph/stylenetwork.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_16 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/Network Graph/canvas-toBlob.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_17 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/validation.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_18 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Assets/img/edit.svg"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_19 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("alt", new global::Microsoft.AspNetCore.Html.HtmlString(""), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_20 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("mr-2"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_21 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Assets/img/delete.svg"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_22 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Assets/img/copy.svg"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_23 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/main.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_24 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("body-index"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_25 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("onload", new global::Microsoft.AspNetCore.Html.HtmlString("init();"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(62, 303, true);
            WriteLiteral(@"<!DOCTYPE html>
<!--[if lt IE 7]>      <html class=""no-js lt-ie9 lt-ie8 lt-ie7""> <![endif]-->
<!--[if IE 7]>         <html class=""no-js lt-ie9 lt-ie8""> <![endif]-->
<!--[if IE 8]>         <html class=""no-js lt-ie9""> <![endif]-->
<!--[if gt IE 8]>      <html class=""no-js""> <!--<![endif]-->
<html>
");
            EndContext();
            BeginContext(365, 2716, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "774f02e4ef65f572851bfc2ecfb9ff810c58227312640", async() => {
                BeginContext(371, 251, true);
                WriteLiteral("\r\n    <meta charset=\"utf-8\" />\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\r\n    <title>TIP-Workplace</title>\r\n    <meta name=\"description\" content=\"\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\r\n    ");
                EndContext();
                BeginContext(622, 88, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "774f02e4ef65f572851bfc2ecfb9ff810c58227313297", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(710, 259, true);
                WriteLiteral(@"
    <link rel=""stylesheet""
          href=""https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/css/bootstrap.min.css""
          integrity=""sha384-B0vP5xmATw1+K9KRQjQERJvTumQW0nPEzvF6L/Z6nronJ3oUOFUFpCjEUQouq2+l""
          crossorigin=""anonymous"" />

    ");
                EndContext();
                BeginContext(969, 48, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "774f02e4ef65f572851bfc2ecfb9ff810c58227315067", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(1017, 658, true);
                WriteLiteral(@"
    <link rel=""stylesheet"" href=""https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"">
    <link href=""https://fonts.googleapis.com/css?family=Roboto""
          rel=""stylesheet"" />
    <link href=""https://fonts.googleapis.com/css?family=Oswald""
          rel=""stylesheet"" />

    <script src=""https://cdnjs.cloudflare.com/ajax/libs/babel-polyfill/7.12.1/polyfill.min.js"" integrity=""sha512-uzOpZ74myvXTYZ+mXUsPhDF+/iL/n32GDxdryI2SJronkEyKC8FBFRLiBQ7l7U/PTYebDbgTtbqTa6/vGtU23A=="" crossorigin=""anonymous""></script>
    <script src=""https://cdn.jsdelivr.net/npm/babel-regenerator-runtime@6.5.0/runtime.js""></script>
    ");
                EndContext();
                BeginContext(1675, 55, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "774f02e4ef65f572851bfc2ecfb9ff810c58227317075", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(1730, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(1736, 53, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "774f02e4ef65f572851bfc2ecfb9ff810c58227318331", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(1789, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(1795, 60, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "774f02e4ef65f572851bfc2ecfb9ff810c58227319587", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(1855, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(1861, 47, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "774f02e4ef65f572851bfc2ecfb9ff810c58227320843", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_9);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(1908, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(1914, 36, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "774f02e4ef65f572851bfc2ecfb9ff810c58227322099", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(1950, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(1956, 43, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "774f02e4ef65f572851bfc2ecfb9ff810c58227323356", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_11);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(1999, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(2005, 45, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "774f02e4ef65f572851bfc2ecfb9ff810c58227324613", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_12);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(2050, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(2056, 49, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "774f02e4ef65f572851bfc2ecfb9ff810c58227325870", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_13);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(2105, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(2111, 44, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "774f02e4ef65f572851bfc2ecfb9ff810c58227327127", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_14);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(2155, 2, true);
                WriteLiteral("\r\n");
                EndContext();
                BeginContext(2504, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(2510, 58, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "774f02e4ef65f572851bfc2ecfb9ff810c58227328500", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_15);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(2568, 8, true);
                WriteLiteral("\r\n\r\n    ");
                EndContext();
                BeginContext(2576, 59, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "774f02e4ef65f572851bfc2ecfb9ff810c58227329761", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_16);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(2635, 393, true);
                WriteLiteral(@"

    <script src=""https://cdnjs.cloudflare.com/ajax/libs/html2canvas/0.4.1/html2canvas.min.js"" integrity=""sha256-c3RzsUWg+y2XljunEQS0LqWdQ04X1D3j22fd/8JCAKw="" crossorigin=""anonymous""></script>
    <script src=""https://cdnjs.cloudflare.com/ajax/libs/FileSaver.js/1.3.8/FileSaver.min.js"" integrity=""sha256-FPJJt8nA+xL4RU6/gsriA8p8xAeLGatoyTjldvQKGdE="" crossorigin=""anonymous""></script>
    ");
                EndContext();
                BeginContext(3028, 42, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "774f02e4ef65f572851bfc2ecfb9ff810c58227331418", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_17);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(3070, 4, true);
                WriteLiteral("\r\n\r\n");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(3081, 4, true);
            WriteLiteral("\r\n\r\n");
            EndContext();
            BeginContext(3085, 46361, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "774f02e4ef65f572851bfc2ecfb9ff810c58227333482", async() => {
                BeginContext(3127, 4862, true);
                WriteLiteral(@"
    <div class=""background_img"">
        <nav class=""navbar navbar-light pb-0 nav-clr"">
            <a class=""navbar-brand logo"" href=""#"">
                <img src=""./Assets/img/Logo icon.svg""
                     width=""30""
                     height=""30""
                     class=""d-inline-block align-top d-mbl-none""
                     alt="""" />
                Optical Network Planning Tool   <label class=""mx-2 about_icon""
                                                       data-toggle=""modal""
                                                       data-target=""#aboutLabel""><img src=""./Assets/img/About icon.svg"" alt="""" srcset="""" class="""" data-toggle=""tooltip"" data-placement=""top"" title=""About"" /></label>
            </a>

            <!-- button section start -->
            <div class=""button_section mt-1"">

                <button type=""button"" id=""btnNewNetwork""
                        class=""btn btn-white mx-2"">
                    Create
                    Network<img src="".");
                WriteLiteral(@"/Assets/img/Create.svg"" class=""mx-2 mb-1"" />
                </button>

                <!-- Create new Modal start -->

                <div class=""modal fade""
                     id=""staticBackdrop""
                     data-backdrop=""static""
                     data-keyboard=""false""
                     tabindex=""-1""
                     aria-labelledby=""staticBackdropLabel""
                     aria-hidden=""true"">
                    <div class=""modal-dialog modal-dialog-centered"">
                        <div class=""modal-content"">
                            <div class=""modal-header"">
                                <h5 class=""modal-title"" id=""staticBackdropLabel"">
                                    Network Creation
                                </h5>
                                <button type=""button"" id=""NetworkCreationClose""
                                        class=""close""
                                        data-dismiss=""modal""
                                   ");
                WriteLiteral(@"     aria-label=""Close"">
                                    <span aria-hidden=""true"">&times;</span>
                                </button>
                            </div>
                            <div class=""modal-body"">
                                <div>
                                    <h6 class=""model-title"">
                                        <img src=""./Assets/img/Model Icon.svg"" alt="""" srcset="""" />
                                        User Requester you to add Network Level Options
                                    </h6>
                                </div>
                                <form>
                                    <div class=""form-group"">
                                        <label for="""">Project Name</label>
                                        <input type=""text""
                                               class=""form-control""
                                               id=""txtProjectName""
                                        ");
                WriteLiteral(@"       placeholder=""Enter your project name"" />
                                    </div>
                                    <div class=""form-group"">
                                        <label for="""">Network Platform Layout</label>
                                        <select class=""form-control"" id=""ddlPlatformLayout""></select>
                                    </div>

                                </form>
                            </div>
                            <div class=""modal-footer"">
                                <button type=""button"" id=""btnCreateProject"" style=""margin:0 auto"" class=""btn modal-btn"">Submit</button>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Create new Modal End -->

                <button type=""button"" onclick=""document.getElementById('import_button').click()"" class=""btn btn-white"">
                    Import
                    Network<img src=""./Asse");
                WriteLiteral(@"ts/img/import.svg"" class=""mx-2"" />
                </button>
                <input style=""display:none"" type=""file"" id=""import_button"" onclick=""importNetwork()"" value=""Upload File"" />
                <!--  <button type=""button"" class=""btn btn-white mx-2"">
                 Save <img src=""./Assets/img/Save.svg"" class=""mx-2"" />
                </button>
                <button type=""button"" class=""btn btn-green "">
                  <img src=""./Assets/img/Export File icon.svg"" class=""mx-2"" />Export
                  File
                </button> -->
                <a href=""help"" class="" mx-2"" data-toggle=""tooltip"" data-placement=""top"" title=""Help"">
                    <img src=""./Assets/img/Help icon.svg"" class=""mx-2"" />
                </a>

");
                EndContext();
                BeginContext(8099, 2411, true);
                WriteLiteral(@"
            </div>
            <!-- button section End -->

        </nav>

        <div class=""modal fade""
             id=""aboutLabel""
             data-backdrop=""static""
             data-keyboard=""false""
             tabindex=""-1""
             aria-labelledby=""aboutpagemodal""
             aria-hidden=""true"">
            <div class=""modal-dialog modal-dialog-centered"">
                <div class=""modal-content"">
                    <div class=""modal-header"">
                        <h5 class=""modal-title"" id=""aboutpagemodal"">About</h5>
                        <button type=""button""
                                class=""close""
                                data-dismiss=""modal""
                                aria-label=""Close"">
                            <span aria-hidden=""true"">&times;</span>
                        </button>
                    </div>
                    <div class=""modal-body text-center"">
                        <div>
                            <img src="".");
                WriteLiteral(@"/Assets/img/Logo.svg""
                                 alt=""""
                                 srcset=""""
                                 class=""about_logo"" />
                            <p for="""">Version: 1.0.0</p>
                            <p>Copyrights © 2021 Optical Network Planning Tool.</p>
                            <p>Powered By</p>
                            <img src=""./Assets/img/client logo 02.svg"" alt="""" srcset="""" />
                            <img src=""./Assets/img/client logo 01.svg"" alt="""" srcset="""" />
                            <p>All right reserved</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>


        
        <div id=""cardNetworkArea"" class=""card network-area"">
            <div class=""welcomemessage"" id=""divWelcome"">
                Click on Create or Import Network
                <img class=""innerImage"" src=""./Assets/img/inner-img.svg"">
            </div>
            <div id=""localworka");
                WriteLiteral(@"rea"" style=""display:none"" class=""inner-body inner-height"">
                <div class=""work_area map-bg"">
                    <div class=""d-flex"">

                        <div class=""container-fluid top-container-change"">
                            <div class=""row"">
                                <div class=""col-md-8 col-12 col-xl-8 col-lg-8 d-flex"">
");
                EndContext();
                BeginContext(11110, 4008, true);
                WriteLiteral(@"                                    <div class=""btn-1"">

                                        <b>Project:</b>&nbsp;<span id=""dropdownMenuButton"" class=""text-white"">Sample project</span>

                                    </div>
                                    <div id=""divNodeFiber"" class=""d-flex node-group1 step"">
                                        <div class=""card icon-group mt-2"" onclick=""openDrawer('multi')"" data-toggle=""tooltip"" data-placement=""top"" title=""Multiple Node"">
                                            <img src=""./Assets/img/multinode.svg""
                                                 class=""mx-auto icon-name justify-content-center align-items-center w-100 h-100"" />
                                            <!--   <p class=""m-0 btn-p"">Multiple Node</p> -->
                                        </div>
                                        <div class=""card icon-group hover-show mt-2"" id=""btnAddNode"" data-toggle=""tooltip"" data-placement=""top"" title=""Single Node""");
                WriteLiteral(@">
                                            <img src=""./Assets/img/singlenode.svg"" draggable=""true"" ondragstart=""drag(event)"" onclick=""AddNodeMode()"" id=""btnAddNode""
                                                 class=""mx-auto icon-name justify-content-center align-items-center w-100 h-100"" />
                                        </div>
                                        <div class=""card icon-group hover-show mt-2"" id=""btnmanualaddEdge"" data-toggle=""tooltip"" data-placement=""top"" title=""Fiber"">
                                            <img src=""./Assets/img/fiber.svg""
                                                 class=""mx-auto icon-name justify-content-center align-items-center w-100 h-100"" />

                                        </div>
                                    </div>
                                    <div style=""display:none"" class=""card icon-group hover-show mt-2"" id=""btnAddAmp"" data-toggle=""tooltip"" data-placement=""top"" title=""Amplifier"">
                     ");
                WriteLiteral(@"                   <img src=""./Assets/img/amp.svg"" draggable=""true"" ondragstart=""drag(event)"" id=""btnAddAmp""
                                             class=""mx-auto icon-name justify-content-center align-items-center w-100 h-100"" />

                                    </div>
                                    <div class=""d-flex node-group1 step"" id=""btnServiceActive"">
                                        <div class=""card icon-group mt-2"" data-toggle=""tooltip"" data-placement=""top"" title=""Service"">
                                            <img src=""./Assets/img/service.svg""
                                                 class=""mx-auto  icon-name justify-content-center align-items-center w-100 h-100"" />
                                            <!--  <p class=""m-0 btn-p"">Add Service</p> -->
                                        </div>
                                    </div>
                                    <div class=""card icon-group mt-3"" style=""display:none"" data-toggle=""tool");
                WriteLiteral(@"tip"" data-placement=""top"" title=""Analyze"">
                                        <img src=""./Assets/img/analyze.svg "" class=""mx-auto  icon-name justify-content-center align-items-center w-100 h-100"" />
                                        <!--  <p class=""m-0 btn-p"">Analyze</p> -->
                                    </div>
                                </div>
                                <div class=""col-md-4 mt-2 col-12 col-xl-4 col-lg-4"">
                                    <div class=""d-flex float-right"">


                                        <div id=""btnSaveNetwork"" class=""icon-padding""><img src=""./Assets/img/Save.svg"" class=""mx-2"" data-toggle=""tooltip"" data-placement=""top"" title=""Save"" /></div>
                                        <div id=""btnExportPopup"" class=""icon-padding""><img src=""./Assets/img/Export.svg"" class=""mx-2"" data-toggle=""tooltip"" data-placement=""top"" title=""Export"" /></div>

");
                EndContext();
                BeginContext(15325, 29797, true);
                WriteLiteral(@"                                        <div id=""btncaptureimagenetwork"" class=""icon-padding1""> <img src=""./Assets/img/Icon awesome-camera.svg"" class=""mx-2"" data-toggle=""tooltip"" data-placement=""top"" title=""Camera"" /></div>



                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>


                    <div id=""mynetwork"" class=""d-flex w-100 justify-content-center align-items-center dragview"">
                    </div>
                </div>
                <!--right side mutinode drawer-->
                <div class=""mutinode-drawer-container"" id=""multi"">
                    <div class=""mutinode-header pl-3 pr-3 pb-1 pt-3 d-flex justify-content-between"">
                        <label class=""f-s-20 dark-heading mb-0"">Add Multiple Node</label>
                        <div data-tab=""multi"">
                            <span class=""close close-btnn"" onclick=""closeDrawer('mu");
                WriteLiteral(@"lti')"">
                                <span aria-hidden=""true"">&times;</span>
                            </span>
                        </div>
                    </div>
                    <hr class=""mt-1"" />

                    <!--mutinode field body-->
                    <div class=""multinode-body pl-3 pr-3"">
                        <div class=""form-group"">
                            <label class=""f-s-17"">Number of Node</label><span id=""spnNofNode"" class=""f-s-12""> </span>
                            <input id=""txtNofNode"" type=""number"" placeholder=""Enter Number of Node"" class=""form-control"" />
                        </div>

                    </div>
                    <div class=""multinode-footer pl-3 pr-3"">
                        <button class=""btn btn-primary-n w-100"" id=""btnAddMultipleNode"">Save</button>
                    </div>
                </div>
                <!--drawer end-->
                <!--single node-->
                <div class=""mutinode-drawer-contai");
                WriteLiteral(@"ner"" id=""single"">
                    <div class=""mutinode-header pl-3 pr-3 pb-1 pt-3 d-flex justify-content-between"">
                        <label class=""f-s-20 dark-heading mb-0"">Add Node</label>
                        <div>
                            <span class=""close close-btnn"" id=""single"" data-tab=""single"" onclick=""closeDrawer('single')"">
                                <span aria-hidden=""true"">&times;</span>
                            </span>
                        </div>
                    </div>
                    <hr class=""mt-1"" />

                    <!--mutinode field body-->
                    <div class=""multinode-body pl-3 pr-3"">
                        <div class=""form-group"">
                            <label class=""f-s-17"">Site Name</label><span class=""f-s-12""> (Max length 20)</span>
                            <input type=""text"" id=""txtNodeName""
                                   placeholder=""Site""
                                   class=""form-control"" />
   ");
                WriteLiteral(@"                     </div>

                        <div class=""form-group"">
                            <label class=""f-s-17"">Node Type</label>
                            <select id=""ddlNodeType"" class=""form-control""></select>
                        </div>

                        <div class=""form-group"">
                            <label class=""f-s-17"">Node Degree</label><span class=""f-s-12""> (Max length 16)</span>
                            <input type=""text"" id=""txtNodeDegree""
                                   placeholder=""Enter Node Degree""
                                   class=""form-control"" />
                        </div>

                        <div class=""form-group"" id=""roadmtype"" style=""display:none"">
                            <label class=""f-s-17"">ROADM Type</label>
                            <select id=""ddlROADMType"" class=""form-control""></select>
                        </div>
                        <div class=""form-group"">
                            <label cl");
                WriteLiteral(@"ass=""f-s-17"">Pre-Amp Type</label>
                            <select id=""ddlPreAmpType"" class=""form-control""></select>
                        </div>
                        <div class=""form-group"">
                            <label class=""f-s-17"">Booster Type</label>
                            <select id=""ddlBoosterType"" class=""form-control""></select>
                        </div>
                    </div>
                    <div class=""multinode-footer pl-3 pr-3"">
                        <div class=""row"">
                            <div class=""col-md-6 col-lg-6 col-12 col-sm-12 col-xl-6"">
                                <button id=""saveSingleNode"" class=""btn btn-primary-n w-100"">
                                    Apply
                                </button>
                            </div>
                            <div class=""col-md-6 col-lg-6 col-12 col-sm-12 col-xl-6"">
                                <button id=""closeSingle"" class=""btn btn-gray-n w-100"">Cancel</button>
  ");
                WriteLiteral(@"                          </div>
                        </div>

                    </div>
                </div>
                <!--single node end-->
                <!--add fibre-->
                <div class=""mutinode-drawer-container"" id=""fibre"">
                    <div class=""mutinode-header pl-3 pr-3 pb-1 pt-3 d-flex justify-content-between"">
                        <label class=""f-s-20 dark-heading mb-0"">Add Fiber</label>
                        <div>
                            <span class=""close close-btnn"" id=""single"" data-tab=""fibre"" onclick=""closeDrawer('fibre')"">
                                <span aria-hidden=""true"">&times;</span>
                            </span>
                        </div>
                    </div>
                    <hr class=""mt-1"" />

                    <!--mutinode field body-->
                    <div class=""multinode-body pl-3 pr-3"">
                        <div class=""form-group"">
                            <label class=""f-s-17"">Fibe");
                WriteLiteral(@"r Label / Name</label>
                            <input type=""text""
                                   placeholder=""Enter Fiber Name""
                                   class=""form-control"" />
                        </div>
                        <div class=""accordion-fiber"">
                            <p class=""title m-0 f-s-17"">Fiber A</p>
                            <span class=""show-fiber"">+</span>
                        </div>
                        <div class=""info-fiber"">
                            <div class=""panel"">
                                <div class=""form-group mt-2"">
                                    <label class=""f-s-17"">Fiber name</label>
                                    <input type=""text""
                                           placeholder=""Enter Fiber name""
                                           class=""form-control"" />
                                </div>
                                <div class=""form-group"">
                                    <");
                WriteLiteral(@"label class=""f-s-17"">Fiber type</label>
                                    <select id=""inputState"" class=""form-control"">
                                        <option selected>Select fiber type</option>
                                        <option>...</option>
                                    </select>
                                </div>
                                <div class=""form-group"">
                                    <label class=""f-s-17"">Source(Tx)</label>
                                    <input type=""text""
                                           placeholder=""Enter Source""
                                           class=""form-control"" />
                                </div>
                                <div class=""form-group"">
                                    <label class=""f-s-17"">Destination(Rx)</label>
                                    <input type=""text""
                                           placeholder=""Enter Destination""
                      ");
                WriteLiteral(@"                     class=""form-control"" />
                                </div>
                                <div class=""form-group"">
                                    <label class=""f-s-17"">CD Coefficient(ps/nm/km)</label>
                                    <input type=""text""
                                           placeholder=""Enter CD Coefficient""
                                           class=""form-control"" />
                                </div>
                                <div class=""form-group"">
                                    <label class=""f-s-17"">PMD Coefficient</label>
                                    <input type=""text""
                                           placeholder=""Enter PMD Coefficient""
                                           class=""form-control"" />
                                </div>
                                <div class=""form-group"">
                                    <label class=""f-s-17"">Span length(in km)</label>
                ");
                WriteLiteral(@"                    <input type=""text""
                                           placeholder=""Enter Span length""
                                           class=""form-control"" />
                                </div>
                                <div class=""form-group"">
                                    <label class=""f-s-17"">Loss Coefficient(dB/km)</label>
                                    <input type=""text""
                                           placeholder=""Enter Loss Coefficient""
                                           class=""form-control"" />
                                </div>
                                <div class=""form-group"">
                                    <label class=""f-s-17"">Connector IN(dB)</label>
                                    <input type=""text""
                                           placeholder=""Enter Connector IN""
                                           class=""form-control"" />
                                </div>
                       ");
                WriteLiteral(@"         <div class=""form-group"">
                                    <label class=""f-s-17"">Connector OUT(dB)</label>
                                    <input type=""text""
                                           placeholder=""Connector OUT""
                                           class=""form-control"" />
                                </div>
                                <div class=""form-group"">
                                    <label class=""f-s-17"">Ageing Loss</label>
                                    <input type=""text""
                                           placeholder=""Enter Ageing Loss""
                                           class=""form-control"" />
                                </div>
                                <div>
                                    <label class=""container-check f-s-17"">
                                        Length Border Loss
                                        <input type=""checkbox"" checked=""checked"">
                                 ");
                WriteLiteral(@"       <span class=""checkmark""></span>
                                    </label>
                                </div>
                                <div class=""form-group"">
                                    <label class=""f-s-17"">Span loss</label>
                                    <input type=""text""
                                           placeholder=""Enter Span loss""
                                           class=""form-control"" />
                                </div>
                            </div>
                        </div>
                        <div class=""mt-3 d-flex justify-content-end"">
                            <label class=""container-check f-s-17"">
                                Clone
                                <input type=""checkbox"" checked=""checked"">
                                <span class=""checkmark""></span>
                            </label>
                        </div>
                        <div class=""accordion-fiber mt-1"">
         ");
                WriteLiteral(@"                   <p class=""title m-0 f-s-17"">Fiber B</p>
                            <span class=""show-fiber"">+</span>
                        </div>
                        <div class=""info-fiber"">
                            <div class=""panel"">
                                <div class=""form-group mt-2"">
                                    <label class=""f-s-17"">Fiber name</label>
                                    <input type=""text""
                                           placeholder=""Enter Fiber name""
                                           class=""form-control"" />
                                </div>
                                <div class=""form-group"">
                                    <label class=""f-s-17"">Fiber type</label>
                                    <select id=""inputState"" class=""form-control"">
                                        <option selected>Select fiber type</option>
                                        <option>...</option>
                        ");
                WriteLiteral(@"            </select>
                                </div>
                                <div class=""form-group"">
                                    <label class=""f-s-17"">Source(Tx)</label>
                                    <input type=""text""
                                           placeholder=""Enter Source""
                                           class=""form-control"" />
                                </div>
                                <div class=""form-group"">
                                    <label class=""f-s-17"">Destination(Rx)</label>
                                    <input type=""text""
                                           placeholder=""Enter Destination""
                                           class=""form-control"" />
                                </div>
                                <div class=""form-group"">
                                    <label class=""f-s-17"">CD Coefficient(ps/nm/km)</label>
                                    <input type=""text""
   ");
                WriteLiteral(@"                                        placeholder=""Enter CD Coefficient""
                                           class=""form-control"" />
                                </div>
                                <div class=""form-group"">
                                    <label class=""f-s-17"">PMD Coefficient</label>
                                    <input type=""text""
                                           placeholder=""Enter PMD Coefficient""
                                           class=""form-control"" />
                                </div>
                                <div class=""form-group"">
                                    <label class=""f-s-17"">Span length(in km)</label>
                                    <input type=""text""
                                           placeholder=""Enter Span length""
                                           class=""form-control"" />
                                </div>
                                <div class=""form-group"">
             ");
                WriteLiteral(@"                       <label class=""f-s-17"">Loss Coefficient(dB/km)</label>
                                    <input type=""text""
                                           placeholder=""Enter Loss Coefficient""
                                           class=""form-control"" />
                                </div>
                                <div class=""form-group"">
                                    <label class=""f-s-17"">Connector IN(dB)</label>
                                    <input type=""text""
                                           placeholder=""Enter Connector IN""
                                           class=""form-control"" />
                                </div>
                                <div class=""form-group"">
                                    <label class=""f-s-17"">Connector OUT(dB)</label>
                                    <input type=""text""
                                           placeholder=""Connector OUT""
                                           clas");
                WriteLiteral(@"s=""form-control"" />
                                </div>
                                <div class=""form-group"">
                                    <label class=""f-s-17"">Ageing Loss</label>
                                    <input type=""text""
                                           placeholder=""Enter Ageing Loss""
                                           class=""form-control"" />
                                </div>
                                <div>
                                    <label class=""container-check f-s-17"">
                                        Length Border Loss
                                        <input type=""checkbox"" checked=""checked"">
                                        <span class=""checkmark""></span>
                                    </label>
                                </div>
                                <div class=""form-group"">
                                    <label class=""f-s-17"">Span loss</label>
                                  ");
                WriteLiteral(@"  <input type=""text""
                                           placeholder=""Enter Span loss""
                                           class=""form-control"" />
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class=""multinode-footer pl-3 pr-3"">
                        <div class=""row"">
                            <div class=""col-md-6 col-lg-6 col-12 col-sm-12 col-xl-6"">
                                <button class=""btn btn-primary-n w-100"">Apply</button>
                            </div>
                            <div class=""col-md-6 col-lg-6 col-12 col-sm-12 col-xl-6"">
                                <button class=""btn btn-gray-n w-100"">Cancel</button>
                            </div>
                        </div>

                    </div>
                </div>
                <!--add fibre end-->
                <!--add service-->
                <div class=""mutinode-dr");
                WriteLiteral(@"awer-container"" id=""service"">
                    <div class=""mutinode-header pl-3 pr-3 pb-1 pt-3 d-flex justify-content-between"">
                        <label class=""f-s-20 dark-heading mb-0"">Add Service</label>
                        <div>
                            <span class=""close close-btnn"" id=""single"" data-tab=""service"" onclick=""closeDrawer('service')"">
                                <span aria-hidden=""true"">&times;</span>
                            </span>
                        </div>
                    </div>
                    <hr class=""mt-1"" />

                    <!--mutinode field body-->
                    <div class=""multinode-body pl-3 pr-3"">
                        <div class=""form-group"">
                            <label class=""f-s-17"">Service name/Label</label>
                            <input type=""text""
                                   placeholder=""Service 1""
                                   class=""form-control"" />
                        </div>
");
                WriteLiteral(@"
                        <div class=""row"">
                            <div class=""col-12 col-lg-4 col-xl-4 col-sm-4"">
                                <label class=""f-s-14"">Source</label>
                            </div>
                            <div class=""col-12 col-lg-3 col-xl-3 col-sm-3"">
                                <input type=""text""
                                       placeholder=""A""
                                       class=""form-control"" />
                            </div>
                        </div>

                        <div class=""row mt-1"">
                            <div class=""col-12 col-lg-4 col-xl-4 col-sm-4"">
                                <label class=""f-s-14"">Destination</label>
                            </div>
                            <div class=""col-12 col-lg-3 col-xl-3 col-sm-3"">
                                <input type=""text""
                                       placeholder=""B""
                                       class=""form-contro");
                WriteLiteral(@"l"" />
                            </div>
                        </div>

                        <div class=""form-group"">
                            <label class=""f-s-17"">Transceiver Type</label>
                            <select id=""inputState"" class=""form-control"">
                                <option selected>Select Transceiver Type</option>
                                <option>...</option>
                            </select>
                        </div>

                        <div class=""form-group"">
                            <label class=""f-s-17"">Frequency Min(THz)</label>
                            <input type=""text""
                                   placeholder=""Enter the Frequency Minimum""
                                   class=""form-control"" />
                        </div>

                        <div class=""form-group"">
                            <label class=""f-s-17"">Frequency Max(THz)</label>
                            <input type=""text""
            ");
                WriteLiteral(@"                       placeholder=""Enter the Frequency Maximum""
                                   class=""form-control"" />
                        </div>

                        <div class=""form-group"">
                            <label class=""f-s-17"">Mode / Data Rate</label>
                            <select id=""inputState"" class=""form-control"">
                                <option selected>Select Mode / Data Rate</option>
                                <option>...</option>
                            </select>
                        </div>

                        <div class=""form-group"">
                            <label class=""f-s-17"">Baud rate(in Gbaud)</label>
                            <select id=""inputState"" class=""form-control"">
                                <option selected>Select Baud rate</option>
                                <option>...</option>
                            </select>
                        </div>

                        <div class=""form-group");
                WriteLiteral(@""">
                            <label class=""f-s-17"">Grid spacing(in GHz)</label><span class=""f-s-12""> In GHZ</span>
                            <input type=""text""
                                   placeholder=""Enter Frequency Minimum""
                                   class=""form-control"" />
                        </div>

                        <div class=""form-group"">
                            <label class=""f-s-17"">Central frequency(in GHz)</label>
                            <select id=""inputState"" class=""form-control"">
                                <option selected>Auto</option>
                                <option>...</option>
                            </select>
                        </div>

                    </div>
                    <div class=""multinode-footer pl-3 pr-3"">
                        <div class=""row"">
                            <div class=""col-md-6 col-lg-6 col-12 col-sm-12 col-xl-6"">
                                <button class=""btn btn-primary-n w-1");
                WriteLiteral(@"00"">Apply</button>
                            </div>
                            <div class=""col-md-6 col-lg-6 col-12 col-sm-12 col-xl-6"">
                                <button class=""btn btn-gray-n w-100"">Cancel</button>
                            </div>
                        </div>

                    </div>
                </div>
                <!--add service end-->

            </div>
        </div>

        <!--
              <div class=""footer"">
                <p class=""m-0"">Powered by Vayu Group and Telecom Infra Project</p>
                <p class=""m-0"">Privacy</p>
              </div> -->
        <!-- Export Modal Start -->
    </div>
    <div class=""modal fade""
         id=""staticBackdrop1""
         data-backdrop=""static""
         data-keyboard=""false""
         tabindex=""-1""
         aria-labelledby=""staticBackdropLabel""
         aria-hidden=""true"">
        <div class=""modal-dialog modal-dialog-centered"">
            <div class=""modal-content"">
              ");
                WriteLiteral(@"  <div class=""modal-header"">
                    <h5 class=""modal-title"" id=""staticBackdropLabel"">
                        Export
                    </h5>
                    <button type=""button""
                            class=""close""
                            data-dismiss=""modal""
                            aria-label=""Close"">
                        <span aria-hidden=""true"">&times;</span>
                    </button>
                </div>
                <div class=""modal-body"">
                    <div class=""form-group"">
                        <label class=""f-s-17"">Export Name</label>
                        <input id=""txtFileName"" type=""text""
                               placeholder=""Enter File Name""
                               class=""form-control"" />
                    </div>
                </div>
                <div class=""modal-footer"">

                    <div class=""container-fluid"">
                        <div class=""row"">
                            <div ");
                WriteLiteral(@"class=""col-12 col-md-6 col-lg-6 col-xl-6 m-auto"">
                                <button id=""btnExportNetwork"" class=""yes-btn w-100"">OK</button>
                            </div>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>
    <!-- Export Modal Ends -->
    <!-- Apply Modal Starts -->
    <div class=""modal fade""
         id=""staticBackdrop2""
         data-backdrop=""static""
         data-keyboard=""false""
         tabindex=""-1""
         aria-labelledby=""staticBackdropLabel""
         aria-hidden=""true"">
        <div class=""modal-dialog modal-dialog-centered"">
            <div class=""modal-content"">
                <div class=""modal-header"">
                    <h5 class=""modal-title"" id=""staticBackdropLabel"">
                        Apply
                    </h5>
                    <button type=""button""
                            class=""close""
                            data-dismiss=""modal""
      ");
                WriteLiteral(@"                      aria-label=""Close"">
                        <span aria-hidden=""true"">&times;</span>
                    </button>
                </div>
                <div class=""modal-body"">
                    <p class=""confirm-export"">Are you sure want to Apply?</p>
                </div>
                <div class=""modal-footer"">

                    <div class=""container-fluid"">
                        <div class=""row"">
                            <div class=""col-12 col-md-6 col-lg-6 col-xl-6"">
                                <button class=""yes-btn w-100"">YES</button>
                            </div>
                            <div class=""col-12 col-md-6 col-lg-6 col-xl-6"">
                                <button id=""closeNodeEditConfirm"" data-dismiss=""modal"" class=""no-btn w-100"">NO</button>
                            </div>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>
    <!-- Apply Moda");
                WriteLiteral(@"l Ends -->
    <!-- service Modal Starts -->
    <div class=""modal fade""
         id=""staticBackdrop3""
         data-backdrop=""static""
         data-keyboard=""false""
         tabindex=""-1""
         aria-labelledby=""staticBackdropLabel""
         aria-hidden=""true"">
        <div class=""modal-dialog modal-dialog-centered"">
            <div class=""modal-content"">
                <div class=""modal-header"">
                    <h5 class=""modal-title"" id=""staticBackdropLabel"">
                        Service
                    </h5>
                    <button type=""button""
                            class=""close""
                            data-dismiss=""modal""
                            aria-label=""Close"">
                        <span aria-hidden=""true"">&times;</span>
                    </button>
                </div>
                <div class=""modal-body"">
                    <p class=""confirm-export1"">You cannot add or edit the network topology once the service gets added. <br>Pleas");
                WriteLiteral(@"e confirm to continue the service.</p>
                </div>
                <div class=""modal-footer"">

                    <div class=""container-fluid"">
                        <div class=""row"">
                            <div class=""col-12 col-md-6 col-lg-6 col-xl-6"">
                                <button id=""btnmanualaddservice"" class=""yes-btn w-100"">YES</button>
                            </div>
                            <div class=""col-12 col-md-6 col-lg-6 col-xl-6"">
                                <button id=""serviceConfirm"" data-dismiss=""modal"" class=""no-btn w-100"">NO</button>
                            </div>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>
    <!-- Apply Modal Ends -->




    <div class=""dropdown-menu"" id=""nodeMenu"" aria-labelledby=""dropdownMenuButton"">
        <span class=""close close-btnn1"" onclick=""closeMenu('nodeMenu')"" data-tab=""single"">
            <span aria-hidden");
                WriteLiteral("=\"true\">×</span>\r\n        </span>\r\n        <a class=\"dropdown-item\" id=\"rightClickNodeEdit\" href=\"#\">");
                EndContext();
                BeginContext(45122, 53, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "774f02e4ef65f572851bfc2ecfb9ff810c58227377903", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_18);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_19);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_20);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(45175, 97, true);
                WriteLiteral(" <span>Edit Node</span></a>\r\n        <a class=\"dropdown-item\" id=\"rightClickNodeDelete\" href=\"#\">");
                EndContext();
                BeginContext(45272, 55, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "774f02e4ef65f572851bfc2ecfb9ff810c58227379428", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_21);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_19);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_20);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(45327, 353, true);
                WriteLiteral(@" <span>Delete Node</span></a>
    </div>

    <div class=""dropdown-menu"" id=""fiberMenu"" aria-labelledby=""dropdownMenuButton"">
        <span class=""close close-btnn1"" onclick=""closeMenu('fiberMenu')"" data-tab=""single"">
            <span aria-hidden=""true"">×</span>
        </span>
        <a class=""dropdown-item"" id=""rightClickEdgeEdit"" href=""#"">");
                EndContext();
                BeginContext(45680, 53, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "774f02e4ef65f572851bfc2ecfb9ff810c58227381223", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_18);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_19);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_20);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(45733, 98, true);
                WriteLiteral(" <span>Edit Fiber</span></a>\r\n        <a class=\"dropdown-item\" id=\"rightClickEdgeDelete\" href=\"#\">");
                EndContext();
                BeginContext(45831, 55, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "774f02e4ef65f572851bfc2ecfb9ff810c58227382749", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_21);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_19);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_20);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(45886, 90, true);
                WriteLiteral(" <span>Delete Fiber</span></a>\r\n        <a class=\"dropdown-item\" id=\"InsertNode\" href=\"#\">");
                EndContext();
                BeginContext(45976, 53, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "774f02e4ef65f572851bfc2ecfb9ff810c58227384267", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_18);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_19);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_20);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(46029, 83, true);
                WriteLiteral(" <span>Insert node</span></a>\r\n        <a class=\"dropdown-item\" id=\"Copy\" href=\"#\">");
                EndContext();
                BeginContext(46112, 53, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "774f02e4ef65f572851bfc2ecfb9ff810c58227385778", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_22);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_19);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_20);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(46165, 351, true);
                WriteLiteral(@" <span>Copy</span></a>
    </div>
    <div class=""dropdown-menu"" id=""serviceMenu"" aria-labelledby=""dropdownMenuButton"">
        <span class=""close close-btnn1"" onclick=""closeMenu('serviceMenu')"" data-tab=""single"">
            <span aria-hidden=""true"">×</span>
        </span>
        <a class=""dropdown-item"" id=""rightClickServiceEdit"" href=""#"">");
                EndContext();
                BeginContext(46516, 53, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "774f02e4ef65f572851bfc2ecfb9ff810c58227387571", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_18);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_19);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_20);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(46569, 103, true);
                WriteLiteral(" <span>Edit Service</span></a>\r\n        <a class=\"dropdown-item\" id=\"rightClickServiceDelete\" href=\"#\">");
                EndContext();
                BeginContext(46672, 55, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "774f02e4ef65f572851bfc2ecfb9ff810c58227389103", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_21);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_19);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_20);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(46727, 48, true);
                WriteLiteral(" <span>Delete Service</span></a>\r\n    </div>\r\n\r\n");
                EndContext();
                BeginContext(47363, 36, true);
                WriteLiteral("\r\n    <!-- Script language -->\r\n    ");
                EndContext();
                BeginContext(47399, 36, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "774f02e4ef65f572851bfc2ecfb9ff810c58227390731", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_23);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(47435, 2, true);
                WriteLiteral("\r\n");
                EndContext();
                BeginContext(47671, 1768, true);
                WriteLiteral(@"    <script src=""https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/js/bootstrap.bundle.min.js""
            integrity=""sha384-Piv4xVNRyMGpqkS2by6br4gNJ7DXjqk09RmUpJ8jgGtD7zP9yug3goQfGII0yAns""
            crossorigin=""anonymous""></script>
    <script>
        $(function () {
            $('[data-toggle=""tooltip""]').tooltip()
        })
    </script>
    <!--  <script>
    var acc = document.getElementsByClassName(""accordion"");
    var i;

    for (i = 0; i < acc.length; i++) {
      acc[i].addEventListener(""click"", function() {
        this.classList.toggle(""active"");
        var panel = this.nextElementSibling;
        if (panel.style.maxHeight) {
          panel.style.maxHeight = null;
        } else {
          panel.style.maxHeight = panel.scrollHeight + ""px"";
        }
      });
    }
    </script> -->
    <script>
        var shows = document.querySelectorAll("".show-fiber"");
        var infos = document.querySelectorAll("".info-fiber"");
        var accordions = document.querySele");
                WriteLiteral(@"ctorAll("".accordion-fiber"");

        for (let i = 0; i < shows.length; i++) {
            shows[i].onclick = function () {
                for (let j = 0; j < shows.length; j++) {
                    if (shows[j] != this) {
                        infos[j].classList.remove(""reveal"");
                        shows[j].innerHTML = ""+"";
                        accordions[j].classList.remove(""radius"");
                    }
                }
                accordions[i].classList.toggle(""radius"");
                infos[i].classList.toggle(""reveal"");
                if (infos[i].className.includes(""reveal"")) shows[i].innerHTML = ""-"";
                else shows[i].innerHTML = ""+"";
            };
        }

    </script>
");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_24);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_25);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(49446, 13, true);
            WriteLiteral("\r\n</html>\r\n\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<TelecomInfraProject.Pages.homepageModel> Html { get; private set; }
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<TelecomInfraProject.Pages.homepageModel> ViewData => (global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<TelecomInfraProject.Pages.homepageModel>)PageContext?.ViewData;
        public TelecomInfraProject.Pages.homepageModel Model => ViewData.Model;
    }
}
#pragma warning restore 1591
